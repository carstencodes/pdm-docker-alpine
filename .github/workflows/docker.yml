name: Container creation

on:
  push:
    branches:
      - 'main'
      - 'ci/test'
  pull_request:
    branches:
      - 'main'

jobs:
  docker:
    strategy:
      matrix:
        include:
          - python: "3.8"
            alpine: "3.13"
          - python: "3.9"
            alpine: "3.14"
          - python: "3.10"
            alpine: "3.16"
    runs-on: ubuntu-latest
    name: Create docker containers
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - 
        name: Get PDM version to use
        id: pdm_version
        run: echo ::set-output name=version::$(cat pdm.version | tr -d [:space:] )
      - 
        name: Get python-gitlab version to use
        id: gitlab_version
        run: echo ::set-output name=version::$(cat gitlab.version | tr -d [:space:] )
      - 
        name: Get github-cli version to use
        id: github_version
        run: echo ::set-output name=version::$(cat github.version | tr -d [:space:] )
      -
        name: Build all images with python ${{ matrix.python }} / alpine ${{ matrix.alpine }} without pushing
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
            ALPINE_VERSION=${{ matrix.alpine }}
            PDM_VERSION=${{ steps.pdm_version.outputs.version }}
            GITLAB_CLI_VERSION=${{ steps.gitlab_version.outputs.version }}
            GITHUB_CLI_VERSION=${{ steps.github_version.outputs.version }}
      -
        name: Build and push base image with python ${{ matrix.python }} / alpine ${{ matrix.alpine }}
        uses: docker/build-push-action@v2
        if: ${{ github.ref_name == 'main' }}
        with:
          context: .
          target: single
          push: true
          tags: carstencodes/pdm-alpine:${{ steps.pdm_version.outputs.version }}-python${{ matrix.python }}
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
            ALPINE_VERSION=${{ matrix.alpine }}
            PDM_VERSION=${{ steps.pdm_version.outputs.version }}
      -
        name: Build and push gitlab image with python ${{ matrix.python }} / alpine ${{ matrix.alpine }} / gitlab ${{ steps.gitlab_version.outputs.version }}
        uses: docker/build-push-action@v2
        if: ${{ github.ref_name == 'main' }}   
        with:
          context: .
          target: gitlab
          push: true
          tags: carstencodes/pdm-alpine:${{ steps.pdm_version.outputs.version }}-python${{ matrix.python }}-gitlab${{ steps.gitlab_version.outputs.version }}
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
            ALPINE_VERSION=${{ matrix.alpine }}
            PDM_VERSION=${{ steps.pdm_version.outputs.version }}
            GITLAB_CLI_VERSION=${{ steps.gitlab_version.outputs.version }}
      -
        name: Build and push github image with python ${{ matrix.python }} / alpine ${{ matrix.alpine }} / github ${{ steps.github_version.outputs.version }}
        uses: docker/build-push-action@v2
        if: ${{ github.ref_name == 'main' }}   
        with:
          context: .
          target: github
          push: true
          tags: carstencodes/pdm-alpine:${{ steps.pdm_version.outputs.version }}-python${{ matrix.python }}-github${{ steps.github_version.outputs.version }}
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
            ALPINE_VERSION=${{ matrix.alpine }}
            PDM_VERSION=${{ steps.pdm_version.outputs.version }}
            GITHUB_CLI_VERSION=${{ steps.github_version.outputs.version }}
